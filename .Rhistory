library(haven)
library(tidyverse)
library(mice)
library(glue)
library(Hmisc)
library(summarytools)
library(flextable)
library(officer)
setwd("D:/Next Steps 1-8/Projects/NEET Book")
rm(list=ls())
# 1. Set-Up ----
load("Data/mice.Rdata")
lbl_clean <- c(Any_NEET = "1+ Months NEET",
Months_NEET = "Months NEET",
cluster4 = "NEET Cluster",
GHQ_W8_Likert = "GHQ-12 Likert",
LifeSat_W8 = "Life Satisfaction",
PoorHealth_W8 = "Poor Self-Rated Health",
AUDIT_W8 = "Alcohol Use",
Adult_W8 = "Adult Identity",
LOC_Factor_W8 = "External Locus of Control",
Employed_W8 = "Employed",
LogPay_W8 = "(Log) Income",
FinDiff_W8 = "Financial Difficulty",
Precarious_W8 = "Precarious Work",
ShiftWork_W8 = "Shift Work",
Female = "Female",
Child_W8 = "Has Child",
FirstChild = "Age at First Birth",
"Female#2.Child_W8" = "Female x Has Child",
"Female#c.FirstChild" = "Female x Age at First Birth",
NonWhite = "Non-White",
ForLangHH_W1 = "Foreign Household Language",
Any_VET = "1+ Months VET",
Education_W8 = "Highest Qualification",
GHQ_W2_Caseness = "GHQ-12 Caseness",
GenHealth_W2 = "Self-Rated Health",
Disabled_W2 = "Disabled",
NSSEC3_W1 = "Family NS-SEC",
IMD_W2 = "IMD",
HHType_W1 = "Household Type",
ParentEduc5_W1 = "Parental Education",
GParentUni_W1 = "Grandparent Attended University",
SchoolAtt_W2 = "Attitude to School",
Risk_W1 = "Risk Behaviours",
LOC_Factor_W2 = "Internal Locus of Control",
"_cons" = "Intercept",
n = "Observations") %>%
enframe(name = "var", value = "var_clean") %>%
mutate(lvls = map(var,
function(x){
y <- (imp_long[[x]])
if (is.factor(y)) labs <- levels(y)
else labs <- x
enframe(labs, name = "level", value = "cat")
})) %>%
unnest(lvls) %>%
filter(!(level == 1 & cat == "No")) %>%
mutate(cat_clean = ifelse(cat == "Yes" | var == cat,
var_clean, cat)) %>%
mutate(index = row_number(),
var_clean = fct_inorder(var_clean),
cat_clean = fct_inorder(cat_clean))
lbl_clean
# 5. AME Plots ----
df_ame <- read_dta("Data/regsave_ame.dta")
View(df_ame)
df_ame %>%
filter(outcome == "cluster4")
df_ame %>%
filter(outcome == "cluster4") %>%
View()
rm(lit = ls())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,
warnings = FALSE, messages = FALSE)
library(summarytools)
library(tidyverse)
load("elsa.Rdata")
setwd("D:/Miscellaneous/Courses/IEHC0046")
load("elsa.Rdata")
descr(elsa$bmi)
table(elsa$sex)
table(elsa$age)
table(elsa$sex)
prop.table(table(elsa$sex))
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,
warnings = FALSE, messages = FALSE)
library(summarytools)
library(tidyverse)
library(summarytools)
freq(elsa$sex)
freq(elsa$past_cvd)
binom.test(elsa$age)
library(DescTools)
BinomCI(elsa$age)
table(elsa$past_cvd)
?binom.test
table(elsa$past_cvd)
cvd <- table(elsa$past_cvd)
cvd
cvd <- table(elsa$past_cvd)
cvd
binom.test(cvd[1], # Number with CVD
sum(cvd)) # Total with CVD data
?freq
elsa$past_cvd
cvd_male <- table(elsa$past_cvd[elsa$sex == "male"])
cvd
binom.test(cvd[1], # Number with CVD
sum(cvd))
cvd_male <- table(elsa$past_cvd[elsa$sex == "male"])
cvd_male
binom.test(cvd_male[1],
sum(cvd_male))
cvd_female <- table(elsa$past_cvd[elsa$sex == "female"])
cvd_female
binom.test(cvd_female[1], # Number with CVD
sum(cvd_female))
cvd_sex <- table(elsa$past_cvd, elsa$sex)
cvd_sex
cvd_sex <- table(elsa$sex, elsa$past_cvd)
cvd_sex
cvd_sex <- table(elsa$sex, elsa$past_cvd)
cvd_sex
binom.test(cvd_sex[1, 1], # Male (First row)
sum(cvd_sex[1,]))
binom.test(cvd_sex[2, 1], # Female (Second row)
sum(cvd_sex[2,]))
prop.test(table(elsa$past_cvd))
cvd <- table(elsa$past_cvd)
cvd
prop.test(cvd) # Total with CVD data
cvd_male <- table(elsa$past_cvd[elsa$sex == "male"])
cvd_male
prop.test(cvd_male)
cvd_female <- table(elsa$past_cvd[elsa$sex == "female"])
cvd_female
prop.test(cvd_female)
cvd_sex <- table(elsa$sex, elsa$past_cvd)
cvd_sex
prop.test(cvd_test)
cvd_sex <- table(elsa$sex, elsa$past_cvd)
cvd_sex
prop.test(cvd_sex)
library(tidyverse)
elsa <- elsa %>%
mutate(age_group = case_when(age >= 45 & age <= 64 ~ "45 - 64",
age >= 65 ~ "65+"),
age_group = factor(age_group))
summary(elsa$age[elsa$age_group == "45 - 64"])
summary(elsa$age[elsa$age_group == "65+"])
library(tidyverse)
elsa <- elsa %>%
mutate(age_group = case_when(age >= 45 & age <= 64 ~ "45 - 64",
age >= 65 ~ "65+"),
age_group = factor(age_group))
elsa %>%
group_by(age_group) %>%
summarise(min = min(age),
max = max(age))
summary(elsa$age[elsa$age_group == "45 - 64"]) # Check we made the variable correctly
summary(elsa$age[elsa$age_group == "65+"])
library(tidyverse)
elsa <- elsa %>%
mutate(age_group = case_when(age >= 45 & age <= 64 ~ "45 - 64",
age >= 65 ~ "65+"),
age_group = factor(age_group))
summary(elsa$age[elsa$age_group == "45 - 64"]) # Check we made the variable correctly
summary(elsa$age[elsa$age_group == "65+"])
cvd_age <- table(elsa$age_group, elsa$past_cvd)
cvd_age
prop.test(cvd_age)
elsa <- elsa %>%
mutate(age_group2 = case_when(age >= 45 & age <= 54 ~ "45 - 54",
age >= 55 & age <= 64 ~ "55 - 64"),
age_group2 = factor(age_group2))
summary(elsa$age[elsa$age_group2 == "45 - 64"]) # Check we made the variable correctly
summary(elsa$age[elsa$age_group2 == "55 - 64"])
elsa <- elsa %>%
mutate(age_group2 = case_when(age >= 45 & age <= 54 ~ "45 - 54",
age >= 55 & age <= 64 ~ "55 - 64"),
age_group2 = factor(age_group2))
summary(elsa$age[elsa$age_group2 == "45 - 54"]) # Check we made the variable correctly
summary(elsa$age[elsa$age_group2 == "55 - 64"])
cvd_age2 <- table(elsa$age_group2, elsa$past_cvd)
cvd_age2
prop.test(cvd_age2)
elsa$sclass
table(elsa$sclass, elsa$past_cvd)
table(elsa$sclass, elsa$past_cvd) %>% prop.test9)
table(elsa$sclass, elsa$past_cvd) %>% prop.test()
table(elsa$sex)
prop.table(table(elsa$sex))
library(summarytools)
freq(elsa$sex)
table(elsa$sex)
prop.table(table(elsa$sex))
library(summarytools)
freq(elsa$sex)
table(elsa$past_cvd)
prop.table(elsa$past_cvd)
table(elsa$past_cvd)
prop.table(elsa$past_cvd)
table(elsa$past_cvd)
prop.table(table(elsa$past_cvd))
freq(elsa$past_cvd)
elsa$smok
install.packages(pwr)
install.packages("pwr")
library(pwr)
?pwr.t.test
pool_sd <- sqrt((sd_1^2 + sd_2^2)/2)
sd_1 <- 17.6
sd_2 <- 17.7
pool_sd <- sqrt((sd_1^2 + sd_2^2)/2)
n <- c(2000, 2000)
pwr.t.test(n, (48.7 - 47)/pool_sd)
pwr.t.test(n, (48.7 - 47)/pool_sd, sig.level = 0.01)
sds <- c(17.6, 17.7)
pool_sd <- sqrt((sds[1]^2 + sds[2]^2)/2)
means <- c(48.7, 47)
pwr.t.test(n, (means[1] - means[2])/pool_sd)
pwr.t.test(n, (means[1] - means[2])/pool_sd, sig.level = 0.01)
n <- c(1500, 1500)
pwr.t.test(n, (means[1] - means[2])/pool_sd, sig.level = 0.01)
pwr.t.test(n, (means[1] - means[2])/pool_sd)
pwr.t.test(n, (means[1] - means[2])/pool_sd, sig.level = 0.01)
n <- c(2500, 2500)
pwr.t.test(n, (means[1] - means[2])/pool_sd)
pwr.t.test(n, (means[1] - means[2])/pool_sd, sig.level = 0.01)
pool_sd <- sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
(n-1)*sd^2
(n-1)*sds^2
sum((n-1)*sds^2)/(sum(n)-2)
sqrt(sum((n-1)*sds^2)/(sum(n)-2))
pool_sd <- sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
n <- c(2500, 2500)
pool_sd <- sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
n <- c(1500, 2500)
pool_sd <- sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
pwr.t.test(n, (means[1] - means[2])/pool_sd, sig.level = 0.01)
?pwr.t2n.test
pwr.t2n.test(1500, 2500, (means[1] - means[2])/pool_sd)
pwr.t2n.test(1500, 2500, (means[1] - means[2])/pool_sd, sig.level = 0.05)
pwr.t2n.test(1500, 2500, (means[1] - means[2])/pool_sd, sig.level = 0.01)
pwr.t2n.test(500, 3500, (means[1] - means[2])/pool_sd, sig.level = 0.01)
pwr.t.test(delta = c(0.2),sd = c(1.3, 1.2))
pwr.t.test(delta = c(0.2),sd = 1.2))
pwr.t.test(delta = c(0.2),sd = 1.2)
pwr.t.test(delta = 0.2,sd = 1.2)
power.t.test(delta = 0.2,sd = 1.2)
power.t.test(delta = 0.2, sd = 1.2, power = 0.8)
power.t.test(delta = 0.2, sd = c(1.2, 1.3), power = 0.8)
?pwr
power.t.test(delta = 0.2, sd = sqrt((1.3^2 + 1.2^2)/2), power = 0.8)
power.t.test(delta = 0.2, sd = sqrt((1.3^2 + 1.2^2)/2), power = 0.9)
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,
warnings = FALSE, messages = FALSE)
library(pwr)
means <- c(48.7, 47)
sds <- c(17.6, 17.7)
n <- c(2000, 2000)
pool_sd <- sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
d <- (means[1] - means[2])/pool_sd
pwr.t.test(n = n, d = d)
n <- c(1500, 1500)
pwr.t.test(n = n, d = d)
n <- c(2500, 2500)
pwr.t.test(n = n, d = d)
get_d <- function(n, means, sds){
pool_sd <-  sqrt(((n[1]-1)*sds[1]^2 + (n[2]-1)*sds[2]^2)/(sum(n)-2))
d <- (means[1] - means[2])/pool_sd
}
n <- c(1500, 2500)
d <- get_d(n, means, sds)
pwr.t2n.test(n[1], n[2], d, sig.level = 0.01)
n <- c(500, 3500)
d <- get_d(n, means, sds)
pwr.t2n.test(n[1], n[2], d, sig.level = 0.01)
pwr.2p2n.test(0.08, 5186, 6205)
?ES.h
?cohen.ES
ES.h
pwr.2p2n.test(ES.h(0.23, 0.31), 5186, 6205)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sd)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sds)
pwr.t.test(delta = d, sd = 1, power = 0.8)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sds)
power.t.test(delta = d, sd = 1, power = 0.8)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sds)
pwr.t.test(d = d, power = 0.8)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sds)
pwr.t.test(d = d, power = 0.8)
n <- c(1000, 1000)
means <- c(5.7, 5.9)
sds <- c(1.3, 1.2)
d <- get_d(n, means, sds)
pwr.t.test(d = d, power = 0.8)
pwr.t.test(d = d, power = 0.9)
pwr.t.test(d = 1/4.6, power = 0.8)
pwr.2p.test(ES.h(0.105, 0.12), power = 0.8)
pwr.2p.test(ES.h(0.34, 0.29), power = 0.9)
